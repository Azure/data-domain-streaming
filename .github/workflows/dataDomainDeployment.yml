name: Data Node Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'code/**'
      - 'infra/BigDataPool/**'
      - 'infra/CosmosDb/**'
      - 'infra/EventHub/**'
      - 'infra/IotHub/**'
      - 'infra/KeyVault/**'
      - 'infra/SqlDatabase/**'
      - 'infra/SqlPool/**'
      - 'infra/SqlServer/**'
      - 'infra/StreamAnalytics/**'
      - 'infra/StreamAnalyticsCluster/**'
      - 'infra/Synapse/**'
      - '.github/workflows/dataDomainDeployment.yml'

env:
  AZURE_SUBSCRIPTION_ID: '2f68ca09-59d9-4ab5-ad11-c54872bfa28d'
  AZURE_RESOURCE_GROUP_NAME: 'dn001-dd002'
  AZURE_LOCATION: northeurope

jobs:
  prerequisite:
    runs-on: ubuntu-latest

    steps:
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Create resource group
    - name: Validating existence of resource group
      id: resource_group_storage
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Validating existence of resource group ${{ env.AZURE_RESOURCE_GROUP_NAME }}"
          az group exists --name ${{ env.AZURE_RESOURCE_GROUP_NAME }}
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2

  validation:
    needs: [ prerequisite ]
    runs-on: ubuntu-latest
    
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2
    
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Deploy Key Vault 001 - validation
    - name: Deploy Key Vault 001 - validation
      id: key_vault_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/KeyVault/deploy.keyVault.json
        parameters: ${{ github.workspace }}/infra/KeyVault/params.keyVault001.json
        deploymentMode: Validate
    
    # Deploy IoT Hub 001 - validation
    - name: Deploy IoT Hub 001 - validation
      id: iot_hub_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/IotHub/deploy.iotHub.json
        parameters: ${{ github.workspace }}/infra/IotHub/params.iotHub001.json
        deploymentMode: Validate
    
    # Deploy Event Hub 001 - validation
    - name: Deploy Event Hub 001 - validation
      id: event_hub_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/EventHub/deploy.eventHub.json
        parameters: ${{ github.workspace }}/infra/EventHub/params.eventHub001.json
        deploymentMode: Validate
    
    # Deploy Stream Analytics Cluster 001 - validation
    - name: Deploy Stream Analytics Cluster 001 - validation
      id: stream_analytics_cluster_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/StreamAnalyticsCluster/deploy.streamAnalyticsCluster.json
        parameters: ${{ github.workspace }}/infra/StreamAnalyticsCluster/params.streamAnalyticsCluster001.json
        deploymentMode: Validate
    
    # Deploy Stream Analytics 001 - validation
    - name: Deploy Stream Analytics 001 - validation
      id: stream_analytics_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/StreamAnalytics/deploy.streamAnalytics.json
        parameters: ${{ github.workspace }}/infra/StreamAnalytics/params.streamAnalytics001.json
        deploymentMode: Validate
    
    # Generate Password 001
    - name: Generate Password 001
      id: generate_password_001
      run: |
        echo "Generating Password"
        pwsh $GITHUB_WORKSPACE/code/GeneratePassword.ps1 -GitHub
    
    # Deploy SQL Server 001 - validation
    - name: Deploy SQL Server 001 - validation
      id: sql_server_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SqlServer/deploy.sqlServer.json
        parameters: ${{ github.workspace }}/infra/SqlServer/params.sqlServer001.json administratorLoginPassword="${{ steps.generate_password_001.outputs.password }}"
        deploymentMode: Validate
    
    # Deploy SQL Database 001 - validation
    - name: Deploy SQL Database 001 - validation
      id: sql_database_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SqlDatabase/deploy.sqlDatabase.json
        parameters: ${{ github.workspace }}/infra/SqlDatabase/params.sqlDatabase001.json sqlServerAdministratorLoginPassword="${{ steps.generate_password_001.outputs.password }}"
        deploymentMode: Validate
    
    # Deploy Cosmos DB 001 - validation
    - name: Deploy Cosmos  DB 001 - validation
      id: cosmos_db_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/CosmosDb/deploy.cosmosDb.json
        parameters: ${{ github.workspace }}/infra/CosmosDb/params.cosmosDb001.json
        deploymentMode: Validate
    
    # Generate Password 002
    - name: Generate Password 002
      id: generate_password_002
      run: |
        echo "Generating Password"
        pwsh $GITHUB_WORKSPACE/code/GeneratePassword.ps1 -GitHub
    
    # Deploy Synapse 001 - validation
    - name: Deploy Synapse 001 - validation
      id: synapse_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/Synapse/deploy.synapse.json
        parameters: ${{ github.workspace }}/infra/Synapse/params.synapse001.json synapseSqlAdministratorPassword="${{ steps.generate_password_002.outputs.password }}"
        deploymentMode: Validate
    
    # Deploy Sql Pool 001 - validation
    - name: Deploy Sql Pool 001 - validation
      id: sql_pool_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SqlPool/deploy.sqlPool.json
        parameters: ${{ github.workspace }}/infra/SqlPool/params.sqlPool001.json
        deploymentMode: Validate
    
    # Deploy Big Data Pool 001 - validation
    - name: Deploy Big Data Pool 001 - validation
      id: big_data_pool_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/BigDataPool/deploy.bigDataPool.json
        parameters: ${{ github.workspace }}/infra/BigDataPool/params.bigDataPool001.json
        deploymentMode: Validate
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout
    
  deployment:
    needs: [ prerequisite, validation ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2
    
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Deploy Key Vault 001
    - name: Deploy Key Vault 001
      id: key_vault_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/KeyVault/deploy.keyVault.json
        parameters: ${{ github.workspace }}/infra/KeyVault/params.keyVault001.json
        deploymentMode: Incremental
    
    # Deploy IoT Hub 001
    - name: Deploy IoT Hub 001
      id: iot_hub_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/IotHub/deploy.iotHub.json
        parameters: ${{ github.workspace }}/infra/IotHub/params.iotHub001.json
        deploymentMode: Incremental
    
    # Deploy Event Hub 001
    - name: Deploy Event Hub 001
      id: event_hub_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/EventHub/deploy.eventHub.json
        parameters: ${{ github.workspace }}/infra/EventHub/params.eventHub001.json
        deploymentMode: Incremental
    
    # Deploy Stream Analytics Cluster 001
    - name: Deploy Stream Analytics Cluster 001
      id: stream_analytics_cluster_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/StreamAnalyticsCluster/deploy.streamAnalyticsCluster.json
        parameters: ${{ github.workspace }}/infra/StreamAnalyticsCluster/params.streamAnalyticsCluster001.json
        deploymentMode: Incremental
    
    # Deploy Stream Analytics 001
    - name: Deploy Stream Analytics 001
      id: stream_analytics_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/StreamAnalytics/deploy.streamAnalytics.json
        parameters: ${{ github.workspace }}/infra/StreamAnalytics/params.streamAnalytics001.json
        deploymentMode: Incremental
    
    # Generate Password 001
    - name: Generate Password 001
      id: generate_password_001
      run: |
        echo "Generating Password"
        pwsh $GITHUB_WORKSPACE/code/GeneratePassword.ps1 -GitHub
    
    # Deploy SQL Server 001
    - name: Deploy SQL Server 001
      id: sql_server_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SqlServer/deploy.sqlServer.json
        parameters: ${{ github.workspace }}/infra/SqlServer/params.sqlServer001.json administratorLoginPassword="${{ steps.generate_password_001.outputs.password }}"
        deploymentMode: Incremental
    
    # Deploy SQL Database 001
    - name: Deploy SQL Database 001
      id: sql_database_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SqlDatabase/deploy.sqlDatabase.json
        parameters: ${{ github.workspace }}/infra/SqlDatabase/params.sqlDatabase001.json sqlServerAdministratorLoginPassword="${{ steps.generate_password_001.outputs.password }}"
        deploymentMode: Incremental
    
    # Deploy Cosmos DB 001
    - name: Deploy Cosmos  DB 001
      id: cosmos_db_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/CosmosDb/deploy.cosmosDb.json
        parameters: ${{ github.workspace }}/infra/CosmosDb/params.cosmosDb001.json
        deploymentMode: Incremental
    
    # Generate Password 002
    - name: Generate Password 002
      id: generate_password_002
      run: |
        echo "Generating Password"
        pwsh $GITHUB_WORKSPACE/code/GeneratePassword.ps1 -GitHub
    
    # Deploy Synapse 001
    - name: Deploy Synapse 001
      id: synapse_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/Synapse/deploy.synapse.json
        parameters: ${{ github.workspace }}/infra/Synapse/params.synapse001.json synapseSqlAdministratorPassword="${{ steps.generate_password_002.outputs.password }}"
        deploymentMode: Incremental
    
    # Deploy Sql Pool 001
    - name: Deploy Sql Pool 001
      id: sql_pool_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SqlPool/deploy.sqlPool.json
        parameters: ${{ github.workspace }}/infra/SqlPool/params.sqlPool001.json
        deploymentMode: Incremental
    
    # Deploy Big Data Pool 001
    - name: Deploy Big Data Pool 001
      id: big_data_pool_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/BigDataPool/deploy.bigDataPool.json
        parameters: ${{ github.workspace }}/infra/BigDataPool/params.bigDataPool001.json
        deploymentMode: Incremental
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout
