{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "enterpriseScaleAnalyticsCompanyPrefix": {
            "type": "string",
            "maxLength": 5,
            "metadata": {
                "description": "Provide the prefix (max 5 characters) for all services that will be created"
            }
        },
        "dataNodeName": {
            "type": "string",
            "defaultValue": "dn001",
            "maxLength": 5,
            "metadata": {
                "description": "Name of the data node."
            }
        },
        "dataDomainName": {
            "type": "string",
            "defaultValue": "dd001",
            "maxLength": 5,
            "metadata": {
                "description": "Name of the data domain."
            }
        },
        "privateDnsZoneResourceGroupId": {
            "type": "string",
            "defaultValue": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/<your-rg-name>",
            "metadata": {
                "description": "Specifies the resource ID of the resource group of the private dns zones."
            }
        },
        "subnetId": {
            "type": "string",
            "defaultValue": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/<your-rg-name>/providers/Microsoft.Network/virtualNetworks/<your-vnet-name>/subnets/<your-subnet-name>",
            "metadata": {
                "description": "Specifies the resource ID of the subnet for the data domain services."
            }
        },
        "databaseAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the admin password of the database servers."
            }
        },
        "synapseDefaultStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the storage account that should be used as default for the synapse workspace."
            }
        },
        "synapseDefaultStorageAccountFileSystem": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the file system in the storage account that should be used as default for the synapse workspace."
            }
        },
        "streamAnalyticsStorageAccountId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource ID of the storage account that should be connected to stream analytics."
            }
        }
    },
    "functions": [],
    "variables": {
        "enterpriseScaleAnalyticsCompanyPrefix": "[parameters('enterpriseScaleAnalyticsCompanyPrefix')]",
        "dataNodeName": "[parameters('dataNodeName')]",
        "dataDomainName": "[parameters('dataDomainName')]",
        "location": "[resourceGroup().location]",
        "privateDnsZoneResourceGroupId": "[parameters('privateDnsZoneResourceGroupId')]",
        "subnetId": "[parameters('subnetId')]",
        "subnetName": "[last(split(variables('subnetId'), '/'))]",
        "vnetName": "[split(variables('subnetId'), '/')[8]]",
        "vnetSubscriptionId": "[split(variables('subnetId'), '/')[2]]",
        "vnetResourceGroupName": "[split(variables('subnetId'), '/')[4]]",
        "databaseAdministratorLoginPassword": "[parameters('databaseAdministratorLoginPassword')]",
        "synapseDefaultStorageAccountName": "[parameters('synapseDefaultStorageAccountName')]",
        "synapseDefaultStorageAccountFileSystem": "[parameters('synapseDefaultStorageAccountFileSystem')]",
        "streamAnalyticsStorageAccountId": "[parameters('streamAnalyticsStorageAccountId')]",
        "bigDataPoolTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/BigDataPool/deploy.bigDataPool.json",
        "cosmosDbTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/CosmosDb/deploy.cosmosDb.json",
        "eventHubTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/EventHub/deploy.eventHub.json",
        "iotHubTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/IotHub/deploy.iotHub.json",
        "keyVaultTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/KeyVault/deploy.keyVault.json",
        "sqlDatabaseTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/SqlDatabase/deploy.sqlDatabase.json",
        "sqlPoolTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/SqlPool/deploy.sqlPool.json",
        "sqlServerTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/SqlServer/deploy.sqlServer.json",
        "streamAnalyticsTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/StreamAnalytics/deploy.streamAnalytics.json",
        "streamAnalyticsClusterTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/StreamAnalyticsCluster/deploy.streamAnalyticsCluster.json",
        "synapseTemplateLink": "https://raw.githubusercontent.com/Azure/data-domain-streaming/main/infra/Synapse/deploy.synapse.json"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "subnetUpdateDeployment",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2019-09-01",
                            "name": "[concat(variables('vnetName'), '/', variables('subnetName'))]",
                            "id": "[variables('subnetId')]",
                            "properties": {
                                "addressPrefix": "[reference(variables('subnetId'), '2020-07-01').addressPrefix]",
                                "networkSecurityGroup": {
                                    "id": "[reference(variables('subnetId'), '2020-07-01').networkSecurityGroup.id]"
                                },
                                "routeTable": {
                                    "id": "[reference(variables('subnetId'), '2020-07-01').routeTable.id]"
                                },
                                "delegations": [],
                                "privateEndpointNetworkPolicies": "Disabled",
                                "privateLinkServiceNetworkPolicies": "Disabled"
                            }
                        }
                    ]
                }
            },
            "subscriptionId": "[variables('vnetSubscriptionId')]",
            "resourceGroup": "[variables('vnetResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "keyVault001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('keyVaultTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "keyVaultName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataDomainName'), '-keyvault001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 24)]"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "iotHub001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('iotHubTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "iotHubName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataDomainName'), '-iothub001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 50)]"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneIdIotHub": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net')]"
                    },
                    "privateDnsZoneIdEventHub": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "eventHub001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment",
                "keyVault001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('eventHubTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "eventHubName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataDomainName'), '-eventhub001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 50)]"
                    },
                    "eventHubSku": {
                        "value": "Standard"
                    },
                    "eventHubMinThroughputUnits": {
                        "value": 1
                    },
                    "eventHubMaxThroughputUnits": {
                        "value": 2
                    },
                    "keyVaultId": {
                        "value": "[reference('keyVault001Deployment').outputs.keyVaultId.value]"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "sqlServer001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('sqlServerTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "sqlServerName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataDomainName'), '-sqlserver001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 63)]"
                    },
                    "administratorLogin": {
                        "value": "ServerMainUser"
                    },
                    "administratorLoginPassword": {
                        "value": "[variables('databaseAdministratorLoginPassword')]"
                    },
                    "sqlAdminGroupName": {
                        "value": ""
                    },
                    "sqlAdminGroupObjectID": {
                        "value": ""
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "sqlDatabase001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment",
                "keyVault001Deployment",
                "sqlserver001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('sqlDatabaseTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "sqlServerId": {
                        "value": "[reference('sqlserver001Deployment').outputs.sqlServerId.value]"
                    },
                    "sqlServerAdministratorLoginPassword": {
                        "value": "[variables('databaseAdministratorLoginPassword')]"
                    },
                    "sqlDatabaseName": {
                        "value": "DataDomain001"
                    },
                    "sqlDatabaseSku": {
                        "value": "Basic"
                    },
                    "sqlDatabaseTier": {
                        "value": "Basic"
                    },
                    "sqlDatabaseCapacity": {
                        "value": 5
                    },
                    "sqlDatabaseMaxSizeInBytes": {
                        "value": 524288000
                    },
                    "sqlDatabaseZoneRedundant": {
                        "value": false
                    },
                    "sqlDatabaseLicenseType": {
                        "value": "LicenseIncluded"
                    },
                    "sqlDatabaseReadReplicaCount": {
                        "value": 0
                    },
                    "sqlDatabaseMinCapacity": {
                        "value": "0.5"
                    },
                    "sqlDatabaseStorageAccountType": {
                        "value": "GRS"
                    },
                    "sqlDatabaseAutoPauseDelay": {
                        "value": -1
                    },
                    "keyVaultId": {
                        "value": "[reference('keyVault001Deployment').outputs.keyVaultId.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "cosmosDb001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment",
                "keyVault001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('cosmosDbTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "cosmosAccountName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataDomainName'), '-cosmos001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 44)]"
                    },
                    "keyVaultId": {
                        "value": "[reference('keyVault001Deployment').outputs.keyVaultId.value]"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "synapse001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('synapseTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "synapseWorkspaceName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataDomainName'), '-synapse001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 50)]"
                    },
                    "synapseDefaultStorageAccountName": {
                        "value": "[variables('synapseDefaultStorageAccountName')]"
                    },
                    "synapseDefaultStorageAccountFileSystem": {
                        "value": "[variables('synapseDefaultStorageAccountFileSystem')]"
                    },
                    "synapseSqlAdministratorLogin": {
                        "value": "ServerMainUser"
                    },
                    "synapseSqlAdministratorPassword": {
                        "value": "[variables('databaseAdministratorLoginPassword')]"
                    },
                    "synapseDatalakeAnalyticsResourceId": {
                        "value": ""
                    },
                    "synapseComputeSubnetResourceId": {
                        "value": ""
                    },
                    "synapseSqlAdminGroupName": {
                        "value": ""
                    },
                    "synapseSqlAdminGroupObjectID": {
                        "value": ""
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneIdSql": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net')]"
                    },
                    "privateDnsZoneIdDev": {
                        "value": "[concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "sqlPool001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment",
                "synapse001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('sqlPoolTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "sqlPoolName": {
                        "value": "sqlpool001"
                    },
                    "sqlPoolCapacity": {
                        "value": "DW100c"
                    },
                    "synapseWorkspaceId": {
                        "value": "[reference('synapse001Deployment').outputs.synapseWorkspaceId.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "bigDataPool001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment",
                "synapse001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('bigDataPoolTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "bigDataPoolName": {
                        "value": "bigdatapool001"
                    },
                    "bigDataPoolNodeSize": {
                        "value": "Medium"
                    },
                    "bigDataPoolMinNodes": {
                        "value": 3
                    },
                    "bigDataPoolMaxNodes": {
                        "value": 10
                    },
                    "bigDataPoolAutopauseDelay": {
                        "value": 15
                    },
                    "synapseWorkspaceId": {
                        "value": "[reference('synapse001Deployment').outputs.synapseWorkspaceId.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "streamAnalyticsCluster001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment",
                "eventHub001Deployment",
                "sqlServer001Deployment",
                "cosmosDb001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('streamAnalyticsClusterTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "streamAnalyticsClusterName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataDomainName'), '-streamanalyticscluster001'), 63)]"
                    },
                    "streamAnalyticsClusterCapacity": {
                        "value": 36
                    },
                    "storageAccountId": {
                        "value": "[variables('streamAnalyticsStorageAccountId')]"
                    },
                    "eventHubId": {
                        "value": "[reference('eventHub001Deployment').outputs.keyVaultId.value]"
                    },
                    "sqlServerId": {
                        "value": "[reference('sqlserver001Deployment').outputs.sqlServerId.value]"
                    },
                    "cosmosDbId": {
                        "value": "[reference('cosmosDb001Deployment').outputs.cosmosDbId.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "streamAnalytics001Deployment",
            "dependsOn": [
                "subnetUpdateDeployment",
                "eventHub001Deployment",
                "sqlServer001Deployment",
                "cosmosDb001Deployment",
                "streamAnalyticsCluster001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('streamAnalyticsTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "streamAnalyticsName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-', variables('dataNodeName'), '-', variables('dataDomainName'), '-streamanalytics001'), 63)]"
                    },
                    "streamAnalyticsCapacity": {
                        "value": 1
                    },
                    "streamAnalyticsJobStorageAccountId": {
                        "value": ""
                    },
                    "streamAnalyticsClusterId": {
                        "value": "[reference('streamAnalyticsCluster001Deployment').outputs.streamAnalyticsClusterId.value]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}